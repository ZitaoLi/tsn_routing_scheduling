[General]
network = {{network_name}}  # your network name

check-signals = false
record-eventlog = false 
debug-on-errors = true
result-dir = results
sim-time-limit = 1s

# debug
**.displayAddresses = true
**.verbose = true
**.promiscuous = true
**.registerProtocol = true

**.*.clock.clockRate = "{{time_granularity or '1ns'}}"  # 1ns, 1us, 1ms, 1s

# number of flows
{% for host in hosts -%}
**.host{{host['host_id']}}.numberOfFlow = {{host['flows'] | length}}
{% endfor %}

# Switches
**.switch*.processingDelay[*].delay = {{process_delay or '0us'}}  # 5us
**.filteringDatabase.database = xmldoc("xml/routes/routes_flat.xml", "/filteringDatabases/")
**.filteringDatabase.cycle = xmldoc("xml/schedules/switches/GCLs_flat.xml", "/schedule/")

**.gateController.initialSchedule = xmldoc("xml/schedules/switches/GCLs_flat.xml")
**.gateController.enableHoldAndRelease = false
**.switch*.eth[*].queuing.tsAlgorithms[0].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[1].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[2].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[3].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[4].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[5].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[6].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[7].typename = "NonFIFO"
**.queues[0].expressQueue = true
**.queues[1].expressQueue = true
**.queues[2].expressQueue = true
**.queues[3].expressQueue = true
**.queues[4].expressQueue = true
**.queues[5].expressQueue = true
**.queues[6].expressQueue = true
**.queues[7].expressQueue = true

**.queues[*].bufferCapacity = 363360b


# Robot Controller
{% for host in hosts -%}
{% for flow in host['flows'] -%}
**.host{{host['host_id']}}.flows[{{loop.index0}}].initialSchedule = xmldoc("xml/schedules/hosts/host{{host['host_id']}}/flow{{flow['flow_id']}}.xml")
{% endfor -%}
{% endfor %}
**.host*.statisticsApp.flows = xmldoc("xml/flows/flows_flat.xml")
